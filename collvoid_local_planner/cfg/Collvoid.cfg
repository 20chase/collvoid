#! /usr/bin/env python

PACKAGE='collvoid_local_planner'
import roslib; roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator import *


gen = ParameterGenerator()
#vel_constraints = gen.add_group("Movement Constraints")
#Name    Type   Reconfiguration level     Description        Default    Min   Max
gen.add("acc_lim_x", double_t, 0,"Max acceleration in x", 1.0, 0.0, 5.0)
gen.add("acc_lim_y", double_t, 0,"Max acceleration in y", 1.0, 0.0, 5.0)
gen.add("acc_lim_th", double_t, 0,"Max acceleration in th", 1.5, 0.0, 20.0)

gen.add("max_vel_with_obstacles", double_t, 0,"Max velocity when obstacles are present", 0.3, 0.0, 5.0)


gen.add("max_vel_x", double_t, 0,"Max velocity in x", 1.0, 0.0, 5.0)
gen.add("min_vel_x", double_t, 0,"Min velocity in x", 0.05, 0.0, 5.0)

gen.add("max_vel_y", double_t, 0,"Max velocity in y", 0.2, 0.0, 5.0)
gen.add("min_vel_y", double_t, 0,"Min velocity in y", 0.05, 0.0, 5.0)

gen.add("max_vel_th", double_t, 0,"Max velocity in th", 1.5, 0.0, 5.0)
gen.add("min_vel_th", double_t, 0,"Min velocity in th", 0.1, 0.0, 5.0)
gen.add("min_vel_theta_inplace", double_t, 0,"Min velocity in th when rotating inplace", 0.05, 0.0, 5.0)

gen.add("footprint_radius", double_t, 0, "Circumscribed radius", 0.45, 0.0, 2.0)

#collvoid = gen.add_group("Collvoid Settings")
gen.add("max_neighbors", int_t, 0, "Max neighbors to take into account", 10, 0, 100)
gen.add("neighbor_dist", double_t, 0, "Distance to neglect neighbors", 15.0, 0, 100)
gen.add("time_horizon", double_t, 0, "How long to stay collision free", 10.0, 0, 100)
gen.add("scale_radius_factor", double_t, 0, "Scale Radius by uncertainty", 0.5, 0, 1)
gen.add("scale_radius", bool_t, 0, "Scale Radius by uncertainty", True)



#diff = gen.add_group("Settings for Diff drive")
gen.add("time_to_holo", double_t, 0, "In how much time I want to be on the ", 0.4, 0, 1)
gen.add("min_error_holo", double_t, 0, "How much error do I allow minimally", 0.01, 0, 1)
gen.add("max_error_holo", double_t, 0, "How much error do I allow maximally", 0.15, 0, 1)

gen.add("restore_defaults", bool_t, 0, "Restore to the original configuration", False)

exit(gen.generate(PACKAGE, "collvoid_reconfigure_node", "Collvoid"))
