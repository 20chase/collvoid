diff -r fb259833edf9 amcl/CMakeLists.txt
--- a/amcl/CMakeLists.txt	Thu Aug 02 17:48:25 2012 -0700
+++ b/amcl/CMakeLists.txt	Thu Sep 13 15:59:32 2012 +0200
@@ -7,6 +7,7 @@
 rosbuild_find_ros_package(dynamic_reconfigure)
 include(${dynamic_reconfigure_PACKAGE_PATH}/cmake/cfgbuild.cmake)
 gencfg()
+rosbuild_genmsg()
 
 rosbuild_add_library(amcl_pf 
                     src/pf/pf.c 
diff -r fb259833edf9 amcl/msg/PoseArrayWeighted.msg
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/amcl/msg/PoseArrayWeighted.msg	Thu Sep 13 15:59:32 2012 +0200
@@ -0,0 +1,3 @@
+Header header
+geometry_msgs/Pose[] poses
+float32[] weights     
\ No newline at end of file
diff -r fb259833edf9 amcl/src/amcl_node.cpp
--- a/amcl/src/amcl_node.cpp	Thu Aug 02 17:48:25 2012 -0700
+++ b/amcl/src/amcl_node.cpp	Thu Sep 13 15:59:32 2012 +0200
@@ -57,6 +57,8 @@
 #include "dynamic_reconfigure/server.h"
 #include "amcl/AMCLConfig.h"
 
+#include "amcl/PoseArrayWeighted.h"
+
 #define NEW_UNIFORM_SAMPLING 1
 
 using namespace amcl;
@@ -193,7 +195,7 @@
     ros::NodeHandle nh_;
     ros::NodeHandle private_nh_;
     ros::Publisher pose_pub_;
-    ros::Publisher particlecloud_pub_;
+    ros::Publisher particlecloud_pub_, particlecloud_weighted_pub_;
     ros::ServiceServer global_loc_srv_;
     ros::Subscriber initial_pose_sub_old_;
     ros::Subscriber map_sub_;
@@ -370,6 +372,9 @@
 
   pose_pub_ = nh_.advertise<geometry_msgs::PoseWithCovarianceStamped>("amcl_pose", 2);
   particlecloud_pub_ = nh_.advertise<geometry_msgs::PoseArray>("particlecloud", 2);
+
+  particlecloud_weighted_pub_ = nh_.advertise<amcl::PoseArrayWeighted>("particlecloud_weighted", 2);
+
   global_loc_srv_ = nh_.advertiseService("global_localization", 
 					 &AmclNode::globalLocalizationCallback,
                                          this);
@@ -978,6 +983,29 @@
 
     pf_odom_pose_ = pose;
 
+    pf_sample_set_t* set2 = pf_->sets + pf_->current_set;
+    //   pf_sample_set_t* set2 = pf_->current_set;
+
+    
+    amcl::PoseArrayWeighted cloud_msg2;
+    cloud_msg2.header.stamp = ros::Time::now();
+    cloud_msg2.header.frame_id = global_frame_id_;
+    cloud_msg2.poses.resize(set2->sample_count);
+    cloud_msg2.weights.resize(set2->sample_count);
+
+    for(int i=0;i<set2->sample_count;i++)
+    {
+      tf::poseTFToMsg(tf::Pose(tf::createQuaternionFromYaw(set2->samples[i].pose.v[2]),
+                               btVector3(set2->samples[i].pose.v[0],
+                                         set2->samples[i].pose.v[1], 0)),
+                      cloud_msg2.poses[i]);
+      
+      cloud_msg2.weights[i] = set2->samples[i].weight;
+
+    }
+    particlecloud_weighted_pub_.publish(cloud_msg2);
+
+    
     // Resample the particles
     if(!(++resample_count_ % resample_interval_))
     {
